import json



ss = '''{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "1", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "1", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0025 LUÍS H. REIS", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "14:36", "USER": "Sruthi JAYAN", "TERMINAL": "2247", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 087305/106/09", "CURRENCY": "USD US DOLLAR 60OAALDUB", "STATUS": "NRES TAX X", "TAG": "JENTACULAR6"}
{"OPENING DATE": "27/12/2018", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "27/12/2018", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "LUÍS H. REIS", "MOD ACCOUNT OFFICER_CODE": "0025", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "TYPE", "SUBCODE_CODE": "001", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2551000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "A ENGLISH", "ADDRESS": "OIL AND GAS INTERNATIONAL TREASURY", "TAG": "JENTACULAR20"}
{"SWIFT": "GOLDEN LANE", "SWIFT_CODE": "31-36", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "2", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "2", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0032 HARDEN THOMAS", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "11:59", "USER": "SUJITH S S", "TERMINAL": "2089", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 072472/278/12", "CURRENCY": "EUR EURO 60SLEGRTM", "STATUS": "NRES TAX X", "TAG": "JENTACULAR6"}
{"OPENING DATE": "16/08/2004", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "16/08/2004", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "HARDEN THOMAS", "MOD ACCOUNT OFFICER_CODE": "0032", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "PRINCIPAL", "SUBCODE_CODE": "001", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2061000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "", "ADDRESS": "SAMSUNG ELECTRONICS EUROPE", "TAG": "JENTACULAR20"}
{"SWIFT": "", "SWIFT_CODE": "ATTN", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "3", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "3", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0032 HARDEN THOMAS", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "11:59", "USER": "SUJITH S S", "TERMINAL": "2089", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 072472/278/12", "CURRENCY": "USD US DOLLAR 60SLEGRTM", "STATUS": "NRES TAX X", "TAG": "JENTACULAR6"}
{"OPENING DATE": "28/05/2004", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "28/05/2004", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "HARDEN THOMAS", "MOD ACCOUNT OFFICER_CODE": "0032", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "PRINCIPAL", "SUBCODE_CODE": "001", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2061000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "", "ADDRESS": "SAMSUNG ELECTRONICS EUROPE", "TAG": "JENTACULAR20"}
{"SWIFT": "", "SWIFT_CODE": "ATTN", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "4", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "4", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0032 HARDEN THOMAS", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "11:56", "USER": "SUJITH S S", "TERMINAL": "2089", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 072475/278/82", "CURRENCY": "EUR EURO 60SOURFRA", "STATUS": "NRES TAX X", "TAG": "JENTACULAR6"}
{"OPENING DATE": "15/06/2007", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "15/06/2007", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "HARDEN THOMAS", "MOD ACCOUNT OFFICER_CODE": "0032", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "PRINCIPAL", "SUBCODE_CODE": "001", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2061000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "", "ADDRESS": "SAMSUNG SEMICONDUCTOR EUROPE GMBH", "TAG": "JENTACULAR20"}
{"SWIFT": "", "SWIFT_CODE": "ATTN", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "5", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "5", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0032 HARDEN THOMAS", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "11:58", "USER": "SUJITH S S", "TERMINAL": "2089", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 072501/278/42", "CURRENCY": "EUR EURO 60SEUXRTM", "STATUS": "NRES TAX X", "TAG": "JENTACULAR6"}
{"OPENING DATE": "14/01/2005", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "14/01/2005", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "HARDEN THOMAS", "MOD ACCOUNT OFFICER_CODE": "0032", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "PRINCIPAL", "SUBCODE_CODE": "001", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2061000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "", "ADDRESS": "SAMSUNG ELECTRONICS BENELUX BV", "TAG": "JENTACULAR20"}
{"SWIFT": "", "SWIFT_CODE": "ATTN", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "6", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "6", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0032 HARDEN THOMAS", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "11:58", "USER": "SUJITH S S", "TERMINAL": "2089", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 072501/278/42", "CURRENCY": "USD US DOLLAR 60SEUXRTM", "STATUS": "NRES TAX X", "TAG": "JENTACULAR6"}
{"OPENING DATE": "01/07/2005", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "01/07/2005", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "HARDEN THOMAS", "MOD ACCOUNT OFFICER_CODE": "0032", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "PRINCIPAL", "SUBCODE_CODE": "001", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2061000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "", "ADDRESS": "SAMSUNG ELECTRONICS BENELUX BV", "TAG": "JENTACULAR20"}
{"SWIFT": "", "SWIFT_CODE": "ATTN", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "7", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "7", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0032 HARDEN THOMAS", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "12:02", "USER": "SUJITH S S", "TERMINAL": "2089", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 075352/278/88", "CURRENCY": "EUR EURO 60SLOOBTS", "STATUS": "NRES TAX X", "TAG": "JENTACULAR6"}
{"OPENING DATE": "10/08/2005", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "10/08/2005", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "HARDEN THOMAS", "MOD ACCOUNT OFFICER_CODE": "0032", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "PRINCIPAL", "SUBCODE_CODE": "001", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2061000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "", "ADDRESS": "SAMSUNG ELECTRONICS SLOVAKIA SRO", "TAG": "JENTACULAR20"}
{"SWIFT": "", "SWIFT_CODE": "ATTN", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "8", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "8", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0032 HARDEN THOMAS", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "12:02", "USER": "SUJITH S S", "TERMINAL": "2089", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 075352/278/88", "CURRENCY": "USD US DOLLAR 60SLOOBTS", "STATUS": "NRES TAX X", "TAG": "JENTACULAR6"}
{"OPENING DATE": "04/03/2009", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "04/03/2009", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "HARDEN THOMAS", "MOD ACCOUNT OFFICER_CODE": "0032", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "PRINCIPAL", "SUBCODE_CODE": "001", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2061000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "", "ADDRESS": "SAMSUNG ELECTRONICS SLOVAKIA SRO", "TAG": "JENTACULAR20"}
{"SWIFT": "", "SWIFT_CODE": "ATTN", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "9", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "9", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0032 HARDEN THOMAS", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "12:04", "USER": "SUJITH S S", "TERMINAL": "2089", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 075756/278/41", "CURRENCY": "SEK SWEDISH KRONE 60SLNBSTO", "STATUS": "NRES TAX X", "TAG": "JENTACULAR6"}
{"OPENING DATE": "05/01/2006", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "05/01/2006", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "HARDEN THOMAS", "MOD ACCOUNT OFFICER_CODE": "0032", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "PRINCIPAL", "SUBCODE_CODE": "001", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2061000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "", "ADDRESS": "SAMSUNG ELECTRONICS NORDIC", "TAG": "JENTACULAR20"}
{"SWIFT": "", "SWIFT_CODE": "ATTN", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "10", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "10", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0032 HARDEN THOMAS", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "12:04", "USER": "SUJITH S S", "TERMINAL": "2089", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 075756/278/41", "CURRENCY": "USD US DOLLAR 60SLNBSTO", "STATUS": "NRES TAX X", "TAG": "JENTACULAR6"}
{"OPENING DATE": "06/03/2007", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "06/03/2007", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "HARDEN THOMAS", "MOD ACCOUNT OFFICER_CODE": "0032", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "PRINCIPAL", "SUBCODE_CODE": "001", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2061000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "", "ADDRESS": "SAMSUNG ELECTRONICS NORDIC", "TAG": "JENTACULAR20"}
{"SWIFT": "", "SWIFT_CODE": "ATTN", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "11", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "11", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0032 HARDEN THOMAS", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "12:04", "USER": "SUJITH S S", "TERMINAL": "2089", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 075756/616/33", "CURRENCY": "SEK SWEDISH KRONE 60SLNBSTO", "STATUS": "NRES TAX X", "TAG": "JENTACULAR6"}
{"OPENING DATE": "05/01/2006", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "05/01/2006", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "HARDEN THOMAS", "MOD ACCOUNT OFFICER_CODE": "0032", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "FINANCE COMMITMENT GIVEN", "SUBCODE_CODE": "010", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "9030000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "", "ADDRESS": "SAMSUNG ELECTRONICS NORDIC", "TAG": "JENTACULAR20"}
{"SWIFT": "", "SWIFT_CODE": "ATTN", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "12", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "12", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0032 HARDEN THOMAS", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "12:03", "USER": "SUJITH S S", "TERMINAL": "2089", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 078497/278/10", "CURRENCY": "EUR EURO 60SLBBBCN", "STATUS": "NRES TAX X", "TAG": "JENTACULAR6"}
{"OPENING DATE": "20/06/2008", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "20/06/2008", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "HARDEN THOMAS", "MOD ACCOUNT OFFICER_CODE": "0032", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "PRINCIPAL", "SUBCODE_CODE": "001", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2061000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "", "ADDRESS": "SAMSUNG ELECTRONICS IBERIA SA", "TAG": "JENTACULAR20"}
{"SWIFT": "", "SWIFT_CODE": "ATTN", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "13", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "13", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0032 HARDEN THOMAS", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "12:09", "USER": "SUJITH S S", "TERMINAL": "2089", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 081755/278/79", "CURRENCY": "TRY NEW TURKISH LIRA 60SES3IST", "STATUS": "NRES TAX X", "TAG": "JENTACULAR6"}
{"OPENING DATE": "20/07/2011", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "20/07/2011", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "HARDEN THOMAS", "MOD ACCOUNT OFFICER_CODE": "0032", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "PRINCIPAL", "SUBCODE_CODE": "001", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2061000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "A ENGLISH", "ADDRESS": "SAMSUNG ELECTRONICS ISTANBUL", "TAG": "JENTACULAR20"}
{"SWIFT": "ISTANBUL IS MERKEZI", "SWIFT_CODE": "FLATOFIS", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "14", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "14", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0032 HARDEN THOMAS", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "12:09", "USER": "SUJITH S S", "TERMINAL": "2089", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 081755/616/71", "CURRENCY": "TRY NEW TURKISH LIRA 60SES3IST", "STATUS": "NRES TAX X", "TAG": "JENTACULAR6"}
{"OPENING DATE": "18/07/2011", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "18/07/2011", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "HARDEN THOMAS", "MOD ACCOUNT OFFICER_CODE": "0032", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "FINANCE COMMITMENT GIVEN", "SUBCODE_CODE": "010", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "9030000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "A ENGLISH", "ADDRESS": "SAMSUNG ELECTRONICS ISTANBUL", "TAG": "JENTACULAR20"}
{"SWIFT": "ISTANBUL IS MERKEZI", "SWIFT_CODE": "FLATOFIS", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "15", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "15", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0235 AURELIEN BADIN", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "14:58", "USER": "KUNAL PRATIK SH", "TERMINAL": "2365", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 014587/001/27", "CURRENCY": "GBP STERLING POUND 99GIKMSOU", "STATUS": "RES TAX", "TAG": "JENTACULAR6"}
{"OPENING DATE": "12/11/2010", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "12/11/2010", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "AURELIEN BADIN", "MOD ACCOUNT OFFICER_CODE": "0235", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "", "SUBCODE_CODE": "", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2511000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "NON-STANDAR", "LANGUAGE": "A ENGLISH", "ADDRESS": "SIEMENS GAMESA RENEWABLE ENERGY", "TAG": "JENTACULAR20"}
{"SWIFT": "HOUSE SIR WILLIAM SIEMENS", "SWIFT_CODE": "FARADAY", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "16", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "16", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "17", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "17", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0235 AURELIEN BADIN", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "14:58", "USER": "KUNAL PRATIK SH", "TERMINAL": "2365", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 014587/003/21", "CURRENCY": "EUR EURO 99GIKMSOU", "STATUS": "RES TAX", "TAG": "JENTACULAR6"}
{"OPENING DATE": "16/05/2012", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "16/05/2012", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "AURELIEN BADIN", "MOD ACCOUNT OFFICER_CODE": "0235", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "", "SUBCODE_CODE": "", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2511000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "A ENGLISH", "ADDRESS": "SIEMENS GAMESA RENEWABLE ENERGY", "TAG": "JENTACULAR20"}
{"SWIFT": "HOUSE SIR WILLIAM SIEMENS", "SWIFT_CODE": "FARADAY", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "18", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "18", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "19", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "19", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0235 AURELIEN BADIN", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "14:33", "USER": "KUNAL PRATIK SH", "TERMINAL": "2365", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 020134/001/59", "CURRENCY": "GBP STERLING POUND 60BRWULON", "STATUS": "RES TAX", "TAG": "JENTACULAR6"}
{"OPENING DATE": "14/11/2011", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "14/11/2011", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "AURELIEN BADIN", "MOD ACCOUNT OFFICER_CODE": "0235", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "", "SUBCODE_CODE": "", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2511000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "", "ADDRESS": "BELL & ROSS BOUTIQUE", "TAG": "JENTACULAR20"}
{"SWIFT": "48-49", "SWIFT_CODE": "UNITS", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "20", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "20", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "21", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "21", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0235 AURELIEN BADIN", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "14:33", "USER": "KUNAL PRATIK SH", "TERMINAL": "2365", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 020134/004/50", "CURRENCY": "GBP STERLING POUND 60BRWULON", "STATUS": "RES TAX", "TAG": "JENTACULAR6"}
{"OPENING DATE": "30/03/2015", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "30/03/2015", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "AURELIEN BADIN", "MOD ACCOUNT OFFICER_CODE": "0235", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "", "SUBCODE_CODE": "", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2511000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "", "ADDRESS": "BELL & ROSS BOUTIQUE", "TAG": "JENTACULAR20"}
{"SWIFT": "48-49", "SWIFT_CODE": "UNITS", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "22", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "22", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "23", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "23", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0235 AURELIEN BADIN", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "14:56", "USER": "KUNAL PRATIK SH", "TERMINAL": "2365", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 088766/764/72", "CURRENCY": "GBP STERLING POUND 60SBIMLON", "STATUS": "RES TAX", "TAG": "JENTACULAR6"}
{"OPENING DATE": "24/01/2019", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "24/01/2019", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "AURELIEN BADIN", "MOD ACCOUNT OFFICER_CODE": "0235", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "GUARANTEE GIVEN P03", "SUBCODE_CODE": "050", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "9131200", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "A ENGLISH", "ADDRESS": "SIEMENS MOBILITY LIMITED", "TAG": "JENTACULAR20"}
{"SWIFT": "HOUSE SIR WILLIAM SIEMENS", "SWIFT_CODE": "FARADAY", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "24", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "24", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0235 AURELIEN BADIN", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "14:57", "USER": "KUNAL PRATIK SH", "TERMINAL": "2365", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 088766/817/19", "CURRENCY": "NOK NORWEGIAN KRONE 60SBIMLON", "STATUS": "RES TAX", "TAG": "JENTACULAR6"}
{"OPENING DATE": "20/05/2021", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "20/05/2021", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "AURELIEN BADIN", "MOD ACCOUNT OFFICER_CODE": "0235", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "GUARANTEE GIVEN P10", "SUBCODE_CODE": "100", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "9131200", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "A ENGLISH", "ADDRESS": "SIEMENS MOBILITY LIMITED", "TAG": "JENTACULAR20"}
{"SWIFT": "HOUSE SIR WILLIAM SIEMENS", "SWIFT_CODE": "FARADAY", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "25", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "25", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0235 AURELIEN BADIN", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "14:31", "USER": "KUNAL PRATIK SH", "TERMINAL": "2365", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 088960/001/67", "CURRENCY": "GBP STERLING POUND 606NKMLON", "STATUS": "RES TAX", "TAG": "JENTACULAR6"}
{"OPENING DATE": "18/07/2019", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "18/07/2019", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "AURELIEN BADIN", "MOD ACCOUNT OFFICER_CODE": "0235", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "", "SUBCODE_CODE": "", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2511000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "A ENGLISH", "ADDRESS": "66 NORTH UK LIMITED", "TAG": "JENTACULAR20"}
{"SWIFT": "EXCHANGE 24 SOUTHWARK STREET", "SWIFT_CODE": "HOP", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "26", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "26", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "27", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "27", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0235 AURELIEN BADIN", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "14:30", "USER": "KUNAL PRATIK SH", "TERMINAL": "2365", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 089868/001/43", "CURRENCY": "USD US DOLLAR 60Q7IVWIN", "STATUS": "RES TAX", "TAG": "JENTACULAR6"}
{"OPENING DATE": "12/06/2020", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "12/06/2020", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "AURELIEN BADIN", "MOD ACCOUNT OFFICER_CODE": "0235", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "", "SUBCODE_CODE": "", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2511000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "A ENGLISH", "ADDRESS": "CDKI HOLDINGS (UK) 1 LIMITED", "TAG": "JENTACULAR20"}
{"SWIFT": "WAY,", "SWIFT_CODE": "CYGNET", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "28", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "28", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "29", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "29", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0235 AURELIEN BADIN", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "14:27", "USER": "KUNAL PRATIK SH", "TERMINAL": "2365", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 089869/001/34", "CURRENCY": "USD US DOLLAR 608W6IWIN", "STATUS": "RES TAX", "TAG": "JENTACULAR6"}
{"OPENING DATE": "12/06/2020", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "12/06/2020", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "AURELIEN BADIN", "MOD ACCOUNT OFFICER_CODE": "0235", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "", "SUBCODE_CODE": "", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2511000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "A ENGLISH", "ADDRESS": "CDKI HOLDINGS (UK) 2 LIMITED", "TAG": "JENTACULAR20"}
{"SWIFT": "WAY", "SWIFT_CODE": "CYGNET", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "30", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "30", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "31", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "31", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0235 AURELIEN BADIN", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "14:28", "USER": "KUNAL PRATIK SH", "TERMINAL": "2365", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 090351/001/61", "CURRENCY": "USD US DOLLAR 60CLULWIN", "STATUS": "RES TAX", "TAG": "JENTACULAR6"}
{"OPENING DATE": "26/03/2021", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "26/03/2021", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "AURELIEN BADIN", "MOD ACCOUNT OFFICER_CODE": "0235", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "", "SUBCODE_CODE": "", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2511000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "A ENGLISH", "ADDRESS": "CDK GLOBAL (UK) LP", "TAG": "JENTACULAR20"}
{"SWIFT": "WAY, CHARNHAM PARK", "SWIFT_CODE": "CYGNET", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "32", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "32", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "33", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "33", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0235 AURELIEN BADIN", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "14:28", "USER": "KUNAL PRATIK SH", "TERMINAL": "2365", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 090351/002/58", "CURRENCY": "GBP STERLING POUND 60CLULWIN", "STATUS": "RES TAX", "TAG": "JENTACULAR6"}
{"OPENING DATE": "26/03/2021", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "26/03/2021", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "AURELIEN BADIN", "MOD ACCOUNT OFFICER_CODE": "0235", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "", "SUBCODE_CODE": "", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2511000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "A ENGLISH", "ADDRESS": "CDK GLOBAL (UK) LP", "TAG": "JENTACULAR20"}
{"SWIFT": "WAY, CHARNHAM PARK", "SWIFT_CODE": "CYGNET", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "34", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "34", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "35", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "35", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0705 BEN SOUTH", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "16:44", "USER": "JAYESH TIKAM", "TERMINAL": "1874", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 011142/001/89", "CURRENCY": "GBP STERLING POUND 99BWNILGG", "STATUS": "NRES TAX X", "TAG": "JENTACULAR6"}
{"OPENING DATE": "08/01/2002", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "08/01/2002", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "BEN SOUTH", "MOD ACCOUNT OFFICER_CODE": "0705", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "", "SUBCODE_CODE": "", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2511000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "NON-STANDAR", "LANGUAGE": "A ENGLISH", "ADDRESS": "BROWNING INTERNATIONAL SA", "TAG": "JENTACULAR20"}
{"SWIFT": "IND DES HAUT SARTS, 3 IEME", "SWIFT_CODE": "PARC", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "36", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "36", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "37", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "37", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0705 BEN SOUTH", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "13:54", "USER": "JAYESH TIKAM", "TERMINAL": "1874", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 011313/001/05", "CURRENCY": "EUR EURO 99XARZLUX", "STATUS": "NRES TAX X", "TAG": "JENTACULAR6"}
{"OPENING DATE": "19/11/2002", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "19/11/2002", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "BEN SOUTH", "MOD ACCOUNT OFFICER_CODE": "0705", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "", "SUBCODE_CODE": "", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2511000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "", "ADDRESS": "ARCELORMITTAL COMMERCIAL SECTIONS S", "TAG": "JENTACULAR20"}
{"SWIFT": "LE CEZANNE", "SWIFT_CODE": "IMMEUBLE", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "38", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "38", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "39", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "39", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0705 BEN SOUTH", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "13:55", "USER": "JAYESH TIKAM", "TERMINAL": "1874", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 011313/002/02", "CURRENCY": "GBP STERLING POUND 99XARZLUX", "STATUS": "NRES TAX X", "TAG": "JENTACULAR6"}
{"OPENING DATE": "20/12/2002", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "20/12/2002", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "BEN SOUTH", "MOD ACCOUNT OFFICER_CODE": "0705", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "", "SUBCODE_CODE": "", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2511000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "", "ADDRESS": "ARCELORMITTAL COMMERCIAL SECTIONS S", "TAG": "JENTACULAR20"}
{"SWIFT": "LE CEZANNE", "SWIFT_CODE": "IMMEUBLE", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "40", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "40", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "41", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "41", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0705 BEN SOUTH", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "13:56", "USER": "JAYESH TIKAM", "TERMINAL": "1874", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 011688/001/25", "CURRENCY": "EUR EURO 99ZARRLUX", "STATUS": "NRES TAX X", "TAG": "JENTACULAR6"}
{"OPENING DATE": "17/05/2004", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "17/05/2004", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "BEN SOUTH", "MOD ACCOUNT OFFICER_CODE": "0705", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "", "SUBCODE_CODE": "", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2511000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "", "ADDRESS": "ARCELORMITTAL COMMERCIAL RPS S.A.R.", "TAG": "JENTACULAR20"}
{"SWIFT": "LE CEZANNE,", "SWIFT_CODE": "IMMEUBLE", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "42", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "42", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "43", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "43", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0705 BEN SOUTH", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "13:57", "USER": "JAYESH TIKAM", "TERMINAL": "1874", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 011688/002/22", "CURRENCY": "GBP STERLING POUND 99ZARRLUX", "STATUS": "NRES TAX X", "TAG": "JENTACULAR6"}
{"OPENING DATE": "17/05/2004", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "17/05/2004", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "BEN SOUTH", "MOD ACCOUNT OFFICER_CODE": "0705", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "", "SUBCODE_CODE": "", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2511000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "", "ADDRESS": "ARCELORMITTAL COMMERCIAL RPS S.A.R.", "TAG": "JENTACULAR20"}
{"SWIFT": "LE CEZANNE,", "SWIFT_CODE": "IMMEUBLE", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "44", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "44", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "45", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "45", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0705 BEN SOUTH", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "16:49", "USER": "JAYESH TIKAM", "TERMINAL": "1874", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 078641/001/12", "CURRENCY": "USD US DOLLAR 60AYAEAUH", "STATUS": "NRES TAX X", "TAG": "JENTACULAR6"}
{"OPENING DATE": "06/11/2008", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "06/11/2008", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "BEN SOUTH", "MOD ACCOUNT OFFICER_CODE": "0705", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "", "SUBCODE_CODE": "", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2511000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "", "ADDRESS": "AL YAH ADVANCED SATELLITE", "TAG": "JENTACULAR20"}
{"SWIFT": "BUILDING, PLOT NO.2", "SWIFT_CODE": "AL-SADEEM", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "46", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "46", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "47", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "47", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0705 BEN SOUTH", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "16:50", "USER": "JAYESH TIKAM", "TERMINAL": "1874", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 078641/003/06", "CURRENCY": "USD US DOLLAR 60AYAEAUH", "STATUS": "NRES TAX X", "TAG": "JENTACULAR6"}
{"OPENING DATE": "06/11/2008", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "06/11/2008", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "BEN SOUTH", "MOD ACCOUNT OFFICER_CODE": "0705", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "", "SUBCODE_CODE": "", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2511000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "", "ADDRESS": "AL YAH ADVANCED SATELLITE", "TAG": "JENTACULAR20"}
{"SWIFT": "BUILDING, PLOT NO.2", "SWIFT_CODE": "AL-SADEEM", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "48", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "48", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "49", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "49", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0705 BEN SOUTH", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "16:50", "USER": "JAYESH TIKAM", "TERMINAL": "1874", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 078641/004/03", "CURRENCY": "USD US DOLLAR 60AYAEAUH", "STATUS": "NRES TAX X", "TAG": "JENTACULAR6"}
{"OPENING DATE": "06/11/2008", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "06/11/2008", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "BEN SOUTH", "MOD ACCOUNT OFFICER_CODE": "0705", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "", "SUBCODE_CODE": "", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2511000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "", "ADDRESS": "AL YAH ADVANCED SATELLITE", "TAG": "JENTACULAR20"}
{"SWIFT": "BUILDING, PLOT NO.2", "SWIFT_CODE": "AL-SADEEM", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "50", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "50", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "51", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "51", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0705 BEN SOUTH", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "16:50", "USER": "JAYESH TIKAM", "TERMINAL": "1874", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 078641/005/97", "CURRENCY": "USD US DOLLAR 60AYAEAUH", "STATUS": "NRES TAX X", "TAG": "JENTACULAR6"}
{"OPENING DATE": "06/11/2008", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "06/11/2008", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "BEN SOUTH", "MOD ACCOUNT OFFICER_CODE": "0705", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "", "SUBCODE_CODE": "", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2511000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "", "ADDRESS": "AL YAH ADVANCED SATELLITE", "TAG": "JENTACULAR20"}
{"SWIFT": "BUILDING, PLOT NO.2", "SWIFT_CODE": "AL-SADEEM", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "52", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "52", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "53", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "53", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0705 BEN SOUTH", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "16:50", "USER": "JAYESH TIKAM", "TERMINAL": "1874", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 078641/006/94", "CURRENCY": "USD US DOLLAR 60AYAEAUH", "STATUS": "NRES TAX X", "TAG": "JENTACULAR6"}
{"OPENING DATE": "06/11/2008", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "06/11/2008", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "BEN SOUTH", "MOD ACCOUNT OFFICER_CODE": "0705", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "", "SUBCODE_CODE": "", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2511000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "", "ADDRESS": "AL YAH ADVANCED SATELLITE", "TAG": "JENTACULAR20"}
{"SWIFT": "BUILDING, PLOT NO.2", "SWIFT_CODE": "AL-SADEEM", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "54", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "54", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "55", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "55", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0705 BEN SOUTH", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "13:52", "USER": "JAYESH TIKAM", "TERMINAL": "1874", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 078809/001/52", "CURRENCY": "GBP STERLING POUND 60NIUBGHE", "STATUS": "NRES TAX X", "TAG": "JENTACULAR6"}
{"OPENING DATE": "15/10/2008", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "15/10/2008", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "BEN SOUTH", "MOD ACCOUNT OFFICER_CODE": "0705", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "", "SUBCODE_CODE": "", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2511000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "A ENGLISH", "ADDRESS": "ARCELORMITTAL TAILORED BLANKS", "TAG": "JENTACULAR20"}
{"SWIFT": "SLUISPARK", "SWIFT_CODE": "BNPAGB22XXX", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "56", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "56", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "57", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "57", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0705 BEN SOUTH", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "13:46", "USER": "JAYESH TIKAM", "TERMINAL": "1874", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 082837/002/75", "CURRENCY": "USD US DOLLAR 60MVNTLON", "STATUS": "RES TAX", "TAG": "JENTACULAR6"}
{"OPENING DATE": "03/04/2013", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "03/04/2013", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "BEN SOUTH", "MOD ACCOUNT OFFICER_CODE": "0705", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "", "SUBCODE_CODE": "", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2511000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "A ENGLISH", "ADDRESS": "METEOR AVIATION INVESTMENTS LIMITED", "TAG": "JENTACULAR20"}
{"SWIFT": "COURT WEST", "SWIFT_CODE": "WEY", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "58", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "58", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "59", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "59", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0705 BEN SOUTH", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "14:28", "USER": "JAYESH TIKAM", "TERMINAL": "1874", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 083078/001/43", "CURRENCY": "GBP STERLING POUND 60CCCBRTM", "STATUS": "NRES TAX X", "TAG": "JENTACULAR6"}
{"OPENING DATE": "03/07/2013", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "03/07/2013", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "BEN SOUTH", "MOD ACCOUNT OFFICER_CODE": "0705", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "", "SUBCODE_CODE": "", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2511000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "A ENGLISH", "ADDRESS": "CMA CGM & ANL SECURITIES B.V.", "TAG": "JENTACULAR20"}
{"SWIFT": "51-55", "SWIFT_CODE": "ACHTERDIJK", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "60", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "60", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "61", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "61", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0705 BEN SOUTH", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "14:28", "USER": "JAYESH TIKAM", "TERMINAL": "1874", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 083078/002/40", "CURRENCY": "EUR EURO 60CCCBRTM", "STATUS": "NRES TAX X", "TAG": "JENTACULAR6"}
{"OPENING DATE": "03/07/2013", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "03/07/2013", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "BEN SOUTH", "MOD ACCOUNT OFFICER_CODE": "0705", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "", "SUBCODE_CODE": "", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2511000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "A ENGLISH", "ADDRESS": "CMA CGM & ANL SECURITIES B.V.", "TAG": "JENTACULAR20"}
{"SWIFT": "51-55", "SWIFT_CODE": "ACHTERDIJK", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "62", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "62", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "63", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "63", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0705 BEN SOUTH", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "14:29", "USER": "JAYESH TIKAM", "TERMINAL": "1874", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 083078/003/37", "CURRENCY": "USD US DOLLAR 60CCCBRTM", "STATUS": "NRES TAX X", "TAG": "JENTACULAR6"}
{"OPENING DATE": "03/07/2013", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "03/07/2013", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "BEN SOUTH", "MOD ACCOUNT OFFICER_CODE": "0705", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "", "SUBCODE_CODE": "", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2511000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "A ENGLISH", "ADDRESS": "CMA CGM & ANL SECURITIES B.V.", "TAG": "JENTACULAR20"}
{"SWIFT": "51-55", "SWIFT_CODE": "ACHTERDIJK", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "64", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "64", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "65", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "65", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0705 BEN SOUTH", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "14:29", "USER": "JAYESH TIKAM", "TERMINAL": "1874", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 083078/004/34", "CURRENCY": "GBP STERLING POUND 60CCCBRTM", "STATUS": "NRES TAX X", "TAG": "JENTACULAR6"}
{"OPENING DATE": "20/12/2018", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "20/12/2018", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "BEN SOUTH", "MOD ACCOUNT OFFICER_CODE": "0705", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "", "SUBCODE_CODE": "", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2511000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "A ENGLISH", "ADDRESS": "CMA CGM & ANL SECURITIES B.V.", "TAG": "JENTACULAR20"}
{"SWIFT": "51-55", "SWIFT_CODE": "ACHTERDIJK", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "66", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "66", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "67", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "67", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0705 BEN SOUTH", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "16:45", "USER": "JAYESH TIKAM", "TERMINAL": "1874", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 084332/001/09", "CURRENCY": "GBP STERLING POUND 60MELIWIN", "STATUS": "RES TAX", "TAG": "JENTACULAR6"}
{"OPENING DATE": "09/09/2014", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "09/09/2014", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "BEN SOUTH", "MOD ACCOUNT OFFICER_CODE": "0705", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "", "SUBCODE_CODE": "", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2511000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "A ENGLISH", "ADDRESS": "FNH UK LIMITED", "TAG": "JENTACULAR20"}
{"SWIFT": "LAKESIDE BUSINESS PARK", "SWIFT_CODE": "6", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "68", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "68", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "69", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "69", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0705 BEN SOUTH", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "16:45", "USER": "JAYESH TIKAM", "TERMINAL": "1874", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 084332/002/06", "CURRENCY": "EUR EURO 60MELIWIN", "STATUS": "RES TAX", "TAG": "JENTACULAR6"}
{"OPENING DATE": "09/09/2014", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "09/09/2014", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "BEN SOUTH", "MOD ACCOUNT OFFICER_CODE": "0705", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "", "SUBCODE_CODE": "", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2511000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "A ENGLISH", "ADDRESS": "FNH UK LIMITED", "TAG": "JENTACULAR20"}
{"SWIFT": "LAKESIDE BUSINESS PARK", "SWIFT_CODE": "6", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "70", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "70", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "71", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "71", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0705 BEN SOUTH", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "16:45", "USER": "JAYESH TIKAM", "TERMINAL": "1874", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 084332/003/03", "CURRENCY": "USD US DOLLAR 60MELIWIN", "STATUS": "RES TAX", "TAG": "JENTACULAR6"}
{"OPENING DATE": "09/09/2014", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "09/09/2014", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "BEN SOUTH", "MOD ACCOUNT OFFICER_CODE": "0705", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "", "SUBCODE_CODE": "", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2511000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "A ENGLISH", "ADDRESS": "FNH UK LIMITED", "TAG": "JENTACULAR20"}
{"SWIFT": "LAKESIDE BUSINESS PARK", "SWIFT_CODE": "6", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "72", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "72", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "73", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "73", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0705 BEN SOUTH", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "16:46", "USER": "JAYESH TIKAM", "TERMINAL": "1874", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 084332/768/02", "CURRENCY": "GBP STERLING POUND 60MELIWIN", "STATUS": "RES TAX", "TAG": "JENTACULAR6"}
{"OPENING DATE": "15/04/2016", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "15/04/2016", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "BEN SOUTH", "MOD ACCOUNT OFFICER_CODE": "0705", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "GUARANTEE GIVEN P05", "SUBCODE_CODE": "070", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "9131200", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "A ENGLISH", "ADDRESS": "FNH UK LIMITED", "TAG": "JENTACULAR20"}
{"SWIFT": "LAKESIDE BUSINESS PARK", "SWIFT_CODE": "6", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "74", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "74", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0705 BEN SOUTH", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "16:46", "USER": "JAYESH TIKAM", "TERMINAL": "1874", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 084332/768/02", "CURRENCY": "USD US DOLLAR 60MELIWIN", "STATUS": "RES TAX", "TAG": "JENTACULAR6"}
{"OPENING DATE": "24/11/2015", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "24/11/2015", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "BEN SOUTH", "MOD ACCOUNT OFFICER_CODE": "0705", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "GUARANTEE GIVEN P05", "SUBCODE_CODE": "070", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "9131200", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "A ENGLISH", "ADDRESS": "FNH UK LIMITED", "TAG": "JENTACULAR20"}
{"SWIFT": "LAKESIDE BUSINESS PARK", "SWIFT_CODE": "6", "TAG": "JENTACULAR21"}
{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "75", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "75", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0705 BEN SOUTH", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "16:46", "USER": "JAYESH TIKAM", "TERMINAL": "1874", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 084332/817/58", "CURRENCY": "GBP STERLING POUND 60MELIWIN", "STATUS": "RES TAX", "TAG": "JENTACULAR6"}
{"OPENING DATE": "22/12/2015", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "22/12/2015", "TAG": "JENTACULAR9"}
{"MOD ACCOUNT OFFICER": "BEN SOUTH", "MOD ACCOUNT OFFICER_CODE": "0705", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "GUARANTEE GIVEN P10", "SUBCODE_CODE": "100", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "9131200", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "A ENGLISH", "ADDRESS": "FNH UK LIMITED", "TAG": "JENTACULAR20"}
{"SWIFT": "LAKESIDE BUSINESS PARK", "SWIFT_CODE": "6", "TAG": "JENTACULAR21"}'''

ls = [
          {
               "name": "JENTACULAR",
               "min_length": 1,
               "max_length": 200,
               "parts_weight": 1.0,
               "regex_weight": 1.0,
               "code": "def parse(input_string):\n    import re\n    try:\n        pattern = (\n            r\"BANK\\s*:\\s*(?P<BANK>[^:]+?)\\s*\"\n            r\"REPORT\\s*:\\s*(?P<REPORT>[^:]+?)\\s*\"\n            r\"PROCESSING DATE/TIME\\s*:\\s*(?P<PROCESSING_DATE_TIME>[0-9/]+\\s*[0-9:]+)\\s*\"\n            r\"FOLIO\\s*:\\s*(?P<FOLIO>\\d+)\\s*\"\n            r\"ARCH\\s*:\\s*(?P<ARCH>.+?)\\s*$\"\n        )\n\n        # Find the match using the named groups 'key' and 'value'\n        match = re.search(pattern, input_string)\n\n        # Initialize the dictionary to store the results\n        parsed_dict = {}\n\n        if match:\n            # Loop through named groups and add to dictionary\n            for key in match.groupdict():\n                parsed_dict[key] = match.group(key).strip()\n                \n        \n        if 'BANK'in parsed_dict:\n            parsed_dict[\"BANK_CODE\"] = parsed_dict[\"BANK\"].split(\" \")[0]\n            parsed_dict[\"BANK\"] = \" \".join(parsed_dict[\"BANK\"].split(\" \")[1:])\n            \n        return parsed_dict\n\n    except Exception as e:\n        print(f\"An error occurred: {e}\")\n        return {}\n",
               "parts": [
                    {
                         "max": 2,
                         "min": 1,
                         "name": "BANK"
                    },
                    {
                         "max": 2,
                         "min": 1,
                         "name": "REPORT"
                    },
                    {
                         "max": 2,
                         "min": 1,
                         "name": "PROCESSING DATE/TIME"
                    },
                    {
                         "max": 2,
                         "min": 1,
                         "name": "FOLIO"
                    },
                    {
                         "max": 1,
                         "min": 1,
                         "name": "ARCH"
                    }
               ],
               "patterns": [],
               "children": [
                    {
                         "name": "JENTACULAR2",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "def parse(input_string):\n    import re\n    try:\n        # Regular expression to match the updated format with \"TYPE\"\n        pattern = (\n            r\"BRANCH\\s*:\\s*(?P<BRANCH_CODE>\\d+)\\s*(?P<BRANCH>[A-Z ]+?)\\s*TYPE\\s*:\\s*(?P<REPORT_TYPE>.+?)\\*+\\s*.+PAGE\\s*:\\s*(?P<PAGE>.+)\"\n        )\n\n        # Find the match using the named groups 'key' and 'value'\n        match = re.search(pattern, input_string)\n\n        # Initialize the dictionary to store the results\n        parsed_dict = {}\n\n        if match:\n            # Loop through named groups and add to dictionary\n            for key in match.groupdict():\n                parsed_dict[key] = match.group(key).strip()\n\n        return parsed_dict\n\n    except Exception as e:\n        print(f\"An error occurred: {e}\")\n        return {}",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "BRANCH"
                              },
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "PAGE"
                              }
                         ],
                         "patterns": [],
                         "children": []
                    },
                    {
                         "name": "JENTACULAR3",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "\ndef parse(line):\n    return  {\"REQUEST_DATE\": line.split('ON')[1].strip()}\n",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "FOR NAMED TYPE: CLIENTS"
                              },
                              {
                                   "max": 3,
                                   "min": 1,
                                   "name": "/"
                              }
                         ],
                         "patterns": [],
                         "children": []
                    },
                    {
                         "name": "JENTACULAR4",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "\ndef parse(line):\n    \n    try:\n        line = line.split(\"#\")[1]\n        k = line.split(\":\")\n        return  {k[0].strip(): k[1].strip()}\n    except:\n        return {}",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "ACT.OFFICER"
                              }
                         ],
                         "patterns": [],
                         "children": []
                    },
                    {
                         "name": "JENTACULAR5",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "def parse(input_string):\n    import re\n    try:\n        # Regular expression to match the specific format\n        pattern = (\n            r\"(?P<MODIFICATION_TYPE>MODIFICATION)\\s+ON\\s+\"\n            r\"(?P<DATE>\\d{2}/\\d{2}/\\d{4})\\s+\"\n            r\"(?P<TIME>\\d{2}:\\d{2})\\s+BY\\s+\"\n            r\"(?P<USER>[A-Za-z\\s]+)\\s+\"\n            r\"TERMINAL\\s+(?P<TERMINAL>\\d+)\\s+\"\n            r\"BRCH\\.\\s+(?P<BRANCH_CODE>\\d+)\\s+\"\n            r\"(?P<BRANCH>[A-Za-z\\s]+)$\"\n        )\n\n        # Find the match using the named groups 'key' and 'value'\n        match = re.search(pattern, input_string)\n\n        # Initialize the dictionary to store the results\n        parsed_dict = {}\n\n        if match:\n            # Loop through named groups and add to dictionary\n            for key in match.groupdict():\n                parsed_dict[key] = match.group(key).strip()\n\n        return parsed_dict\n\n    except Exception as e:\n        print(f\"An error occurred: {e}\")\n        return {}",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "MODIFICATION ON"
                              },
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "BY"
                              },
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "TERMINAL"
                              },
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "BRCH"
                              }
                         ],
                         "patterns": [],
                         "children": []
                    },
                    {
                         "name": "JENTACULAR6",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "def parse(input_string):\n    import re\n    try:\n        # Regular expression to match the specific format\n        pattern = (\n            r\"ACCOUNT NUMBER\\s*:\\s*(?P<ACCOUNT_NUMBER>.+)CCY\\s*:\\s*(?P<CURRENCY>.+)STATUS\\s*:\\s*(?P<STATUS>.*)\"\n        )\n\n        # Find the match using the named groups 'key' and 'value'\n        match = re.search(pattern, input_string)\n\n        # Initialize the dictionary to store the results\n        parsed_dict = {}\n\n        if match:\n            # Loop through named groups and add to dictionary\n            for key in match.groupdict():\n                parsed_dict[key] = match.group(key).strip()\n\n        return parsed_dict\n\n    except Exception as e:\n        print(f\"An error occurred: {e}\")\n        return {}",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "ACCOUNT NUMBER"
                              },
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "CCY"
                              },
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "STATUS"
                              }
                         ],
                         "patterns": [],
                         "children": []
                    },
                    {
                         "name": "JENTACULAR7",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "\ndef parse(line):\n    \n    try:\n        line = line.split(\"#\")[1]\n        k = line.split(\":\")\n        return  {k[0].strip(): k[1].strip()}\n    except:\n        return {}",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "ACCOUNT TYPE"
                              }
                         ],
                         "patterns": [],
                         "children": []
                    },
                    {
                         "name": "JENTACULAR8",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "\ndef parse(line):\n    \n    try:\n        line = line.split(\"#\")[1]\n        k = line.split(\":\")\n        return  {k[0].strip(): k[1].strip()}\n    except:\n        return {}",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "OPENING DATE"
                              }
                         ],
                         "patterns": [],
                         "children": []
                    },
                    {
                         "name": "JENTACULAR9",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "\ndef parse(line):\n    \n    try:\n        line = line.split(\"#\")[1]\n        k = line.split(\":\")\n        return  {k[0].strip(): k[1].strip()}\n    except:\n        return {}",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "ORIGINAL DATE"
                              }
                         ],
                         "patterns": [],
                         "children": []
                    },
                    {
                         "name": "JENTACULAR10",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "\ndef parse(line):\n    \n    try:\n        line = line.split(\"#\")[1]\n        k = line.split(\":\")\n        return  {\n            k[0].strip(): \" \".join(k[1].strip().split(\" \")[1:]),\n            k[0].strip() + \"_CODE\": k[1].strip().split(\" \")[0]\n        }\n    except:\n        return {}",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "OPENING ORIGIN"
                              }
                         ],
                         "patterns": [],
                         "children": []
                    },
                    {
                         "name": "JENTACULAR11",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "\ndef parse(line):\n    \n    try:\n        line = line.split(\"#\")[1]\n        k = line.split(\":\")\n        return  {\n            k[0].strip(): \" \".join(k[1].strip().split(\" \")[1:]),\n            k[0].strip() + \"_CODE\": k[1].strip().split(\" \")[0]\n        }\n    except:\n        return {}",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "MOD ACCOUNT OFFICER"
                              }
                         ],
                         "patterns": [],
                         "children": []
                    },
                    {
                         "name": "JENTACULAR12",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "\ndef parse(line):\n    \n    try:\n        line = line.split(\"#\")[1]\n        k = line.split(\":\")\n        return  {\n            k[0].strip(): \" \".join(k[1].strip().split(\" \")[1:]),\n            k[0].strip() + \"_CODE\": k[1].strip().split(\" \")[0]\n        }\n    except:\n        return {}",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "DURATION"
                              }
                         ],
                         "patterns": [],
                         "children": []
                    },
                    {
                         "name": "JENTACULAR13",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "\ndef parse(line):\n    \n    try:\n        line = line.split(\"#\")[1]\n        k = line.split(\":\")\n        return  {\n            k[0].strip(): \" \".join(k[1].strip().split(\" \")[1:]),\n            k[0].strip() + \"_CODE\": k[1].strip().split(\" \")[0]\n        }\n    except:\n        return {}",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "EXPIRY"
                              }
                         ],
                         "patterns": [],
                         "children": []
                    },
                    {
                         "name": "JENTACULAR14",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "\ndef parse(line):\n    \n    try:\n        line = line.split(\"#\")[1]\n        k = line.split(\":\")\n        return  {\n            k[0].strip(): \" \".join(k[1].strip().split(\" \")[1:]),\n            k[0].strip() + \"_CODE\": k[1].strip().split(\" \")[0]\n        }\n    except:\n        return {}",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "SUBCODE"
                              }
                         ],
                         "patterns": [],
                         "children": []
                    },
                    {
                         "name": "JENTACULAR15",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "\ndef parse(line):\n    \n    try:\n        line = line.split(\"#\")[1]\n        k = line.split(\":\")\n        return  {\n            k[0].strip(): \" \".join(k[1].strip().split(\" \")[1:]),\n            k[0].strip() + \"_CODE\": k[1].strip().split(\" \")[0]\n        }\n    except:\n        return {}",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "AGREEMENT DELIVERY DATE"
                              }
                         ],
                         "patterns": [],
                         "children": []
                    },
                    {
                         "name": "JENTACULAR16",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "\ndef parse(line):\n    \n    try:\n        line = line.split(\"#\")[1]\n        k = line.split(\":\")\n        return  {\n            k[0].strip(): \" \".join(k[1].strip().split(\" \")[1:]),\n            k[0].strip() + \"_CODE\": k[1].strip().split(\" \")[0]\n        }\n    except:\n        return {}",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "AGREEMENT SIGNATURE DATE"
                              }
                         ],
                         "patterns": [],
                         "children": []
                    },
                    {
                         "name": "JENTACULAR17",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "\ndef parse(line):\n    \n    try:\n        line = line.split(\"#\")[1]\n        k = line.split(\":\")\n        return  {\n            k[0].strip(): \" \".join(k[1].strip().split(\" \")[1:]),\n            k[0].strip() + \"_CODE\": k[1].strip().split(\" \")[0]\n        }\n    except:\n        return {}",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "AGREEMENT VERSION NUMBER"
                              }
                         ],
                         "patterns": [],
                         "children": []
                    },
                    {
                         "name": "JENTACULAR18",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "\ndef parse(line):\n    \n    try:\n        line = line.split(\"#\")[1]\n        k = line.split(\":\")\n        return  {\n            k[0].strip(): \" \".join(k[1].strip().split(\" \")[1:]),\n            k[0].strip() + \"_CODE\": k[1].strip().split(\" \")[0]\n        }\n    except:\n        return {}",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "REFINANCEABLE"
                              }
                         ],
                         "patterns": [],
                         "children": []
                    },
                    {
                         "name": "JENTACULAR19",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "\ndef parse(line):\n    \n    try:\n        line = line.split(\"#\")[1]\n        k = line.split(\":\")\n        return  {\n            k[0].strip(): \" \".join(k[1].strip().split(\" \")[1:]),\n            k[0].strip() + \"_CODE\": k[1].strip().split(\" \")[0]\n        }\n    except:\n        return {}",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "ACTG.STRUCTURE CODE"
                              }
                         ],
                         "patterns": [],
                         "children": []
                    },
                    {
                         "name": "JENTACULAR20",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "\ndef parse(input_string):\n    import re\n    try:\n        # Regular expression to match the specific format\n        pattern = (\n            r\"\\s*MAIL CONDITIONS\\s*:\\s*(?P<MAIL_CONDITION>.+)LANGUAGE\\s*.+:\\s*(?P<LANGUAGE>.+)ADDRESS\\s*.+:(?P<ADDRESS>.+)\"\n        )\n\n        # Find the match using the named groups 'key' and 'value'\n        match = re.search(pattern, input_string)\n\n        # Initialize the dictionary to store the results\n        parsed_dict = {}\n\n        if match:\n            # Loop through named groups and add to dictionary\n            for key in match.groupdict():\n                parsed_dict[key] = match.group(key).strip()\n\n        return parsed_dict\n\n    except Exception as e:\n        print(f\"An error occurred: {e}\")\n        return {}",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "MAIL CONDITIONS"
                              },
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "LANGUAGE C"
                              },
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "ADDRESS"
                              }
                         ],
                         "patterns": [],
                         "children": []
                    },
                    {
                         "name": "JENTACULAR21",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "\ndef parse(line):\n    \n    try:\n        line = line.split(\"#\")[1]\n        k = line.split(\":\")\n        return  {\n            k[0].strip(): \" \".join(k[1].strip().split(\" \")[1:]),\n            k[0].strip() + \"_CODE\": k[1].strip().split(\" \")[0]\n        }\n    except:\n        return {}",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "SWIFT"
                              }
                         ],
                         "patterns": [],
                         "children": []
                    }
               ]
          }
     ]

ss2 = '''{"BANK": "BNP LONDON BRANCH", "REPORT": "EA0802", "PROCESSING_DATE_TIME": "19/01/2023 21:01", "FOLIO": "1", "ARCH": ".", "BANK_CODE": "12", "TAG": "JENTACULAR"}
{"BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "REPORT_TYPE": "CLIENT ACCOUNT OPENING AND MODIFICATION", "PAGE": "1", "TAG": "JENTACULAR2"}
{"REQUEST_DATE": "19/01/2023 * *", "TAG": "JENTACULAR3"}
{"ACT.OFFICER": "0025 LUÍS H. REIS", "TAG": "JENTACULAR4"}
{"MODIFICATION_TYPE": "MODIFICATION", "DATE": "19/01/2023", "TIME": "14:36", "USER": "Sruthi JAYAN", "TERMINAL": "2247", "BRANCH_CODE": "09618", "BRANCH": "BNP PARIBAS", "TAG": "JENTACULAR5"}
{"ACCOUNT_NUMBER": "09618 087305/106/09", "CURRENCY": "USD US DOLLAR 60OAALDUB", "STATUS": "NRES TAX X", "TAG": "JENTACULAR6"}
{"ACCOUNT TYPE": "028 TYPE", "TAG": "JENTACULAR7"}
{"OPENING DATE": "27/12/2018", "TAG": "JENTACULAR8"}
{"ORIGINAL DATE": "27/12/2018", "TAG": "JENTACULAR9"}
{"OPENING ORIGIN": "AUTOMATIC-OPENING ACCO", "OPENING ORIGIN_CODE": "99", "TAG": "JENTACULAR10"}
{"MOD ACCOUNT OFFICER": "LUÍS H. REIS", "MOD ACCOUNT OFFICER_CODE": "0025", "TAG": "JENTACULAR11"}
{"DURATION": "", "DURATION_CODE": "", "TAG": "JENTACULAR12"}
{"EXPIRY": "", "EXPIRY_CODE": "", "TAG": "JENTACULAR13"}
{"SUBCODE": "TYPE", "SUBCODE_CODE": "001", "TAG": "JENTACULAR14"}
{"AGREEMENT DELIVERY DATE": "", "AGREEMENT DELIVERY DATE_CODE": "", "TAG": "JENTACULAR15"}
{"AGREEMENT SIGNATURE DATE": "", "AGREEMENT SIGNATURE DATE_CODE": "", "TAG": "JENTACULAR16"}
{"AGREEMENT VERSION NUMBER": "", "AGREEMENT VERSION NUMBER_CODE": "", "TAG": "JENTACULAR17"}
{"REFINANCEABLE": "NO", "REFINANCEABLE_CODE": "N", "TAG": "JENTACULAR18"}
{"ACTG.STRUCTURE CODE": "", "ACTG.STRUCTURE CODE_CODE": "2551000", "TAG": "JENTACULAR19"}
{"MAIL_CONDITION": "STANDARD", "LANGUAGE": "A ENGLISH", "ADDRESS": "OIL AND GAS INTERNATIONAL TREASURY", "TAG": "JENTACULAR20"}
{"SWIFT": "GOLDEN LANE", "SWIFT_CODE": "31-36", "TAG": "JENTACULAR21"}'''


def merge_elements(list_of_dicts, pos1, pos2):
    try:
        # Ensure positions are within the bounds of the list
        if pos1 < 0 or pos1 >= len(list_of_dicts) or pos2 < 0 or pos2 >= len(list_of_dicts):
            raise IndexError("Position(s) out of range.")

        # Merge the dictionaries: update dict at pos2 with contents of dict at pos1
        tag = list_of_dicts[pos2]["TAG"]
        list_of_dicts[pos2].update(list_of_dicts[pos1])
        list_of_dicts[pos2]["TAG"] = tag

        # Remove the element at pos1
        # list_of_dicts.pop(pos1)

        return list_of_dicts

    except IndexError as e:
        print(f"Error: {e}")
        return list_of_dicts


class XX:
    def catch_childress(self, node, parent=None):
        if len(node["children"]) == 0:
            node["_parent"] = parent
            return node
        else:
            for tmp in node["children"]:
                return self.catch_childress(tmp, parent=node["name"])

    def get_childress(self, ls):
        childress = []
        for tmp in ls:
            childress.append(self.catch_childress(tmp))
        return childress


def remove_tag_from_structure(structure, tag):
    updated_structure = []

    for element in structure:
        # Check if the element has the tag
        if element.get('name') != tag:
            # Recursively remove the tag from children
            if 'children' in element and isinstance(element['children'], list):
                element['children'] = remove_tag_from_structure(element['children'], tag)
            # Add the element to the updated structure if it does not match the tag
            updated_structure.append(element)

    return updated_structure


lsss = ss.split('\n')[::-1]
lsss = [eval(tmp) for tmp in lsss]

has_parent = True
prev = []
while len(ls) > 0:
    childress = XX().get_childress(ls)
    for childress_ in childress:
        ls = remove_tag_from_structure(ls, childress_["name"])
        merge_positions = []
        for idx, line in enumerate(lsss):
            dc = line
            if dc["TAG"] == childress_["name"]:
                for idx2, line2 in enumerate(lsss):
                    if idx2 > idx:
                        dc2 = line2
                        if dc2["TAG"] == childress_["_parent"]:
                            merge_positions.append((idx, idx2))
                            break

        for idx, tmp in enumerate(merge_positions):
            lsss = merge_elements(lsss, tmp[0], tmp[1])


        prev = lsss
        lsss = [tmp for tmp in lsss if tmp['TAG'] != childress_["name"]]


"""for tmp in prev:
     print(len(tmp.keys()), tmp)"""


class ElementProcessor:
    def merge_elements(self, list_of_dicts, pos1, pos2):
        try:
            # Ensure positions are within the bounds of the list
            if pos1 < 0 or pos1 >= len(list_of_dicts) or pos2 < 0 or pos2 >= len(list_of_dicts):
                raise IndexError("Position(s) out of range.")

            # Merge the dictionaries: update dict at pos2 with contents of dict at pos1
            tag = list_of_dicts[pos2]["TAG"]
            list_of_dicts[pos2].update(list_of_dicts[pos1])
            list_of_dicts[pos2]["TAG"] = tag

            return list_of_dicts

        except IndexError as e:
            print(f"Error: {e}")
            return list_of_dicts

    def catch_childress(self, node, parent=None):
        if len(node["children"]) == 0:
            node["_parent"] = parent
            return node
        else:
            for tmp in node["children"]:
                return self.catch_childress(tmp, parent=node["name"])

    def get_childress(self, ls):
        childress = []
        for tmp in ls:
            childress.append(self.catch_childress(tmp))
        return childress

    def remove_tag_from_structure(self, structure, tag):
        updated_structure = []

        for element in structure:
            # Check if the element has the tag
            if element.get('name') != tag:
                # Recursively remove the tag from children
                if 'children' in element and isinstance(element['children'], list):
                    element['children'] = self.remove_tag_from_structure(element['children'], tag)
                # Add the element to the updated structure if it does not match the tag
                updated_structure.append(element)

        return updated_structure

    def process_chunk(self, chunk, hierarchy):
         for branch in hierarchy["children"]:
              positions = []
              for idx, tmp in enumerate(chunk):
                   if tmp['TAG'] == hierarchy["name"]:
                        for idx2, tmp2 in enumerate(chunk):
                             if tmp2["TAG"] == branch["name"]:
                                  positions.append((idx, idx2))
              for x, y in positions:
                   tag_ = chunk[y]["TAG"]
                   chunk[y].update(chunk[x])
                   chunk[y]["TAG"] = tag_
                   self.process_chunk(chunk[1:], branch)
         return chunk

    def compute_sectors(self, lsss, start_tag):
         sectors = []
         for idx, tmp in enumerate(lsss):
              if tmp['TAG'] == start_tag:
                   sectors.append(idx)
         return sectors

    def compute_chunks(self, lsss, sectors):
         chunks = []

         for i in range(len(sectors) - 1):
              start_idx = sectors[i]
              end_idx = sectors[i + 1]
              chunks.append(lsss[start_idx:end_idx])
         return chunks

    def process_elements2(self, ss, ls, start_tag):
         lsss = ss.split('\n')
         lsss = [eval(tmp) for tmp in lsss]
         sectors = self.compute_sectors(lsss, start_tag)
         chunks = self.compute_chunks(lsss, sectors)
         dd = []
         self.get_all_childress(ls[0], dd)
         dd = [tmp["name"] for tmp in dd]
         ppp = []
         for chunk in chunks:
              d = self.process_chunk(chunk, ls[0])
              chunk = [tmp for tmp in chunk if tmp["TAG"] in dd]
              ppp.append(chunk)
         return ppp


    def get_all_childress(self, ls, d):
         for tmp in ls["children"]:
              if len(tmp["children"]) == 0:
                   d.append(tmp)
              else:
                   self.get_all_childress(tmp, d)

    def process_elements(self, ss, ls):
        lsss = ss.split('\n')[::-1]
        lsss = [eval(tmp) for tmp in lsss]

        prev = []
        while len(ls) > 0:
            childress = self.get_childress(ls)
            for childress_ in childress:
                ls = self.remove_tag_from_structure(ls, childress_["name"])
                merge_positions = []
                for idx, line in enumerate(lsss):
                    dc = line
                    if dc["TAG"] == childress_["name"]:
                        for idx2, line2 in enumerate(lsss):
                            if idx2 > idx:
                                dc2 = line2
                                if dc2["TAG"] == childress_["_parent"]:
                                    merge_positions.append((idx, idx2))
                                    break

                for idx, tmp in enumerate(merge_positions):
                    lsss = self.merge_elements(lsss, tmp[0], tmp[1])

                prev = lsss
                lsss = [tmp for tmp in lsss if tmp['TAG'] != childress_["name"]]

        for tmp in prev:
            print(len(tmp.keys()), tmp)


class ElementProcessor2:
     def merge_elements(self, list_of_dicts, source_index, target_index):
          try:
               # Ensure indices are within bounds of the list
               if source_index < 0 or source_index >= len(list_of_dicts) or target_index < 0 or target_index >= len(
                       list_of_dicts):
                    raise IndexError("Index out of range.")

               # Merge the dictionaries: update dict at target_index with contents of dict at source_index
               tag_value = list_of_dicts[target_index]["TAG"]
               list_of_dicts[target_index].update(list_of_dicts[source_index])
               list_of_dicts[target_index]["TAG"] = tag_value

               return list_of_dicts

          except IndexError as e:
               print(f"Error: {e}")
               return list_of_dicts

     def set_parent_for_child(self, node, parent_name=None):
          if len(node["children"]) == 0:
               node["_parent"] = parent_name
               return node
          else:
               for child_node in node["children"]:
                    return self.set_parent_for_child(child_node, parent_name=node["name"])

     def assign_parents_to_children(self, node_list):
          nodes_with_parents = []
          for node in node_list:
               nodes_with_parents.append(self.set_parent_for_child(node))
          return nodes_with_parents

     def remove_tag_from_structure(self, structure, tag_to_remove):
          updated_structure = []

          for element in structure:
               if element.get('name') != tag_to_remove:
                    if 'children' in element and isinstance(element['children'], list):
                         element['children'] = self.remove_tag_from_structure(element['children'], tag_to_remove)
                    updated_structure.append(element)

          return updated_structure

     def process_elements(self, structure_data, hierarchy_list):
          reversed_data_lines = structure_data.split('\n')[::-1]
          structure_dicts = [eval(line) for line in reversed_data_lines]

          previous_structure = []
          while len(hierarchy_list) > 0:
               child_elements = self.assign_parents_to_children(hierarchy_list)
               for child in child_elements:
                    hierarchy_list = self.remove_tag_from_structure(hierarchy_list, child["name"])
                    merge_positions = []
                    for idx, element_dict in enumerate(structure_dicts):
                         if element_dict["TAG"] == child["name"]:
                              for idx2, potential_parent_dict in enumerate(structure_dicts):
                                   if idx2 > idx and potential_parent_dict["TAG"] == child["_parent"]:
                                        merge_positions.append((idx, idx2))
                                        break

                    for idx, merge_pair in enumerate(merge_positions):
                         structure_dicts = self.merge_elements(structure_dicts, merge_pair[0], merge_pair[1])

                    previous_structure = structure_dicts
                    structure_dicts = [entry for entry in structure_dicts if entry['TAG'] != child["name"]]

          return previous_structure

     def process_chunk(self, chunk, hierarchy_branch):

          for child_branch in hierarchy_branch["children"]:
               merge_positions = []
               for idx, element in enumerate(chunk):
                    if element['TAG'] == hierarchy_branch["name"]:
                         for idx2, child_element in enumerate(chunk):
                              if child_element['TAG'] == child_branch["name"]:
                                   merge_positions.append((idx, idx2))
               for parent_idx, child_idx in merge_positions:
                    tag_value = chunk[child_idx]["TAG"]
                    chunk[child_idx].update(chunk[parent_idx])
                    chunk[child_idx]["TAG"] = tag_value
                    self.process_chunk(chunk[1:], child_branch)
          return chunk

     def find_sector_indices(self, data_lines, start_tag):
          sector_indices = []
          for idx, line in enumerate(data_lines):
               if line['TAG'] == start_tag:
                    sector_indices.append(idx)
          return sector_indices

     def divide_into_chunks(self, data_lines, sector_indices):
          chunks = []

          for i in range(len(sector_indices) - 1):
               start_idx = sector_indices[i]
               end_idx = sector_indices[i + 1]
               chunks.append(data_lines[start_idx:end_idx])
          return chunks

     def gather_all_child_elements(self, node, child_list):
          for child in node["children"]:
               if len(child["children"]) == 0:
                    child_list.append(child)
               else:
                    self.gather_all_child_elements(child, child_list)

     def process_elements_with_hierarchy(self, structure_data, hierarchy, start_tag):
          data_lines = structure_data.split('\n')
          data_lines = [eval(line) for line in data_lines]
          sector_indices = self.find_sector_indices(data_lines, start_tag)
          chunks = self.divide_into_chunks(data_lines, sector_indices)
          all_children = []
          self.gather_all_child_elements(hierarchy[0], all_children)
          child_tags = [child["name"] for child in all_children]
          processed_chunks = []
          for chunk in chunks:
               processed_chunk = self.process_chunk(chunk, hierarchy[0])
               chunk_filtered = [entry for entry in chunk if entry["TAG"] in child_tags]
               processed_chunks.append(chunk_filtered)
          return processed_chunks

ls = [
          {
               "name": "JENTACULAR",
               "min_length": 1,
               "max_length": 200,
               "parts_weight": 1.0,
               "regex_weight": 1.0,
               "code": "def parse(input_string):\n    import re\n    try:\n        pattern = (\n            r\"BANK\\s*:\\s*(?P<BANK>[^:]+?)\\s*\"\n            r\"REPORT\\s*:\\s*(?P<REPORT>[^:]+?)\\s*\"\n            r\"PROCESSING DATE/TIME\\s*:\\s*(?P<PROCESSING_DATE_TIME>[0-9/]+\\s*[0-9:]+)\\s*\"\n            r\"FOLIO\\s*:\\s*(?P<FOLIO>\\d+)\\s*\"\n            r\"ARCH\\s*:\\s*(?P<ARCH>.+?)\\s*$\"\n        )\n\n        # Find the match using the named groups 'key' and 'value'\n        match = re.search(pattern, input_string)\n\n        # Initialize the dictionary to store the results\n        parsed_dict = {}\n\n        if match:\n            # Loop through named groups and add to dictionary\n            for key in match.groupdict():\n                parsed_dict[key] = match.group(key).strip()\n                \n        \n        if 'BANK'in parsed_dict:\n            parsed_dict[\"BANK_CODE\"] = parsed_dict[\"BANK\"].split(\" \")[0]\n            parsed_dict[\"BANK\"] = \" \".join(parsed_dict[\"BANK\"].split(\" \")[1:])\n            \n        return parsed_dict\n\n    except Exception as e:\n        print(f\"An error occurred: {e}\")\n        return {}\n",
               "parts": [
                    {
                         "max": 2,
                         "min": 1,
                         "name": "BANK"
                    },
                    {
                         "max": 2,
                         "min": 1,
                         "name": "REPORT"
                    },
                    {
                         "max": 2,
                         "min": 1,
                         "name": "PROCESSING DATE/TIME"
                    },
                    {
                         "max": 2,
                         "min": 1,
                         "name": "FOLIO"
                    },
                    {
                         "max": 1,
                         "min": 1,
                         "name": "ARCH"
                    }
               ],
               "patterns": [],
               "children": [
                    {
                         "name": "JENTACULAR2",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "def parse(input_string):\n    import re\n    try:\n        # Regular expression to match the updated format with \"TYPE\"\n        pattern = (\n            r\"BRANCH\\s*:\\s*(?P<BRANCH_CODE>\\d+)\\s*(?P<BRANCH>[A-Z ]+?)\\s*TYPE\\s*:\\s*(?P<REPORT_TYPE>.+?)\\*+\\s*.+PAGE\\s*:\\s*(?P<PAGE>.+)\"\n        )\n\n        # Find the match using the named groups 'key' and 'value'\n        match = re.search(pattern, input_string)\n\n        # Initialize the dictionary to store the results\n        parsed_dict = {}\n\n        if match:\n            # Loop through named groups and add to dictionary\n            for key in match.groupdict():\n                parsed_dict[key] = match.group(key).strip()\n\n        return parsed_dict\n\n    except Exception as e:\n        print(f\"An error occurred: {e}\")\n        return {}",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "BRANCH"
                              },
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "PAGE"
                              }
                         ],
                         "patterns": [],
                         "children": [


                         ]
                    },
                    {
                         "name": "JENTACULAR3",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "\ndef parse(line):\n    return  {\"REQUEST_DATE\": line.split('ON')[1].strip()}\n",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "FOR NAMED TYPE: CLIENTS"
                              },
                              {
                                   "max": 3,
                                   "min": 1,
                                   "name": "/"
                              }
                         ],
                         "patterns": [],
                         "children": []
                    },
                    {
                         "name": "JENTACULAR4",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "\ndef parse(line):\n    \n    try:\n        line = line.split(\"#\")[1]\n        k = line.split(\":\")\n        return  {k[0].strip(): k[1].strip()}\n    except:\n        return {}",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "ACT.OFFICER"
                              }
                         ],
                         "patterns": [],
                         "children": []
                    },
                    {
                         "name": "JENTACULAR5",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "def parse(input_string):\n    import re\n    try:\n        # Regular expression to match the specific format\n        pattern = (\n            r\"(?P<MODIFICATION_TYPE>MODIFICATION)\\s+ON\\s+\"\n            r\"(?P<DATE>\\d{2}/\\d{2}/\\d{4})\\s+\"\n            r\"(?P<TIME>\\d{2}:\\d{2})\\s+BY\\s+\"\n            r\"(?P<USER>[A-Za-z\\s]+)\\s+\"\n            r\"TERMINAL\\s+(?P<TERMINAL>\\d+)\\s+\"\n            r\"BRCH\\.\\s+(?P<BRANCH_CODE>\\d+)\\s+\"\n            r\"(?P<BRANCH>[A-Za-z\\s]+)$\"\n        )\n\n        # Find the match using the named groups 'key' and 'value'\n        match = re.search(pattern, input_string)\n\n        # Initialize the dictionary to store the results\n        parsed_dict = {}\n\n        if match:\n            # Loop through named groups and add to dictionary\n            for key in match.groupdict():\n                parsed_dict[key] = match.group(key).strip()\n\n        return parsed_dict\n\n    except Exception as e:\n        print(f\"An error occurred: {e}\")\n        return {}",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "MODIFICATION ON"
                              },
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "BY"
                              },
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "TERMINAL"
                              },
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "BRCH"
                              }
                         ],
                         "patterns": [],
                         "children": []
                    },
                    {
                         "name": "JENTACULAR6",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "def parse(input_string):\n    import re\n    try:\n        # Regular expression to match the specific format\n        pattern = (\n            r\"ACCOUNT NUMBER\\s*:\\s*(?P<ACCOUNT_NUMBER>.+)CCY\\s*:\\s*(?P<CURRENCY>.+)STATUS\\s*:\\s*(?P<STATUS>.*)\"\n        )\n\n        # Find the match using the named groups 'key' and 'value'\n        match = re.search(pattern, input_string)\n\n        # Initialize the dictionary to store the results\n        parsed_dict = {}\n\n        if match:\n            # Loop through named groups and add to dictionary\n            for key in match.groupdict():\n                parsed_dict[key] = match.group(key).strip()\n\n        return parsed_dict\n\n    except Exception as e:\n        print(f\"An error occurred: {e}\")\n        return {}",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "ACCOUNT NUMBER"
                              },
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "CCY"
                              },
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "STATUS"
                              }
                         ],
                         "patterns": [],
                         "children": []
                    },
                    {
                         "name": "JENTACULAR7",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "\ndef parse(line):\n    \n    try:\n        line = line.split(\"#\")[1]\n        k = line.split(\":\")\n        return  {k[0].strip(): k[1].strip()}\n    except:\n        return {}",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "ACCOUNT TYPE"
                              }
                         ],
                         "patterns": [],
                         "children": []
                    },
                    {
                         "name": "JENTACULAR8",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "\ndef parse(line):\n    \n    try:\n        line = line.split(\"#\")[1]\n        k = line.split(\":\")\n        return  {k[0].strip(): k[1].strip()}\n    except:\n        return {}",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "OPENING DATE"
                              }
                         ],
                         "patterns": [],
                         "children": []
                    },
                    {
                         "name": "JENTACULAR9",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "\ndef parse(line):\n    \n    try:\n        line = line.split(\"#\")[1]\n        k = line.split(\":\")\n        return  {k[0].strip(): k[1].strip()}\n    except:\n        return {}",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "ORIGINAL DATE"
                              }
                         ],
                         "patterns": [],
                         "children": []
                    },
                    {
                         "name": "JENTACULAR10",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "\ndef parse(line):\n    \n    try:\n        line = line.split(\"#\")[1]\n        k = line.split(\":\")\n        return  {\n            k[0].strip(): \" \".join(k[1].strip().split(\" \")[1:]),\n            k[0].strip() + \"_CODE\": k[1].strip().split(\" \")[0]\n        }\n    except:\n        return {}",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "OPENING ORIGIN"
                              }
                         ],
                         "patterns": [],
                         "children": []
                    },
                    {
                         "name": "JENTACULAR11",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "\ndef parse(line):\n    \n    try:\n        line = line.split(\"#\")[1]\n        k = line.split(\":\")\n        return  {\n            k[0].strip(): \" \".join(k[1].strip().split(\" \")[1:]),\n            k[0].strip() + \"_CODE\": k[1].strip().split(\" \")[0]\n        }\n    except:\n        return {}",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "MOD ACCOUNT OFFICER"
                              }
                         ],
                         "patterns": [],
                         "children": []
                    },
                    {
                         "name": "JENTACULAR12",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "\ndef parse(line):\n    \n    try:\n        line = line.split(\"#\")[1]\n        k = line.split(\":\")\n        return  {\n            k[0].strip(): \" \".join(k[1].strip().split(\" \")[1:]),\n            k[0].strip() + \"_CODE\": k[1].strip().split(\" \")[0]\n        }\n    except:\n        return {}",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "DURATION"
                              }
                         ],
                         "patterns": [],
                         "children": []
                    },
                    {
                         "name": "JENTACULAR13",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "\ndef parse(line):\n    \n    try:\n        line = line.split(\"#\")[1]\n        k = line.split(\":\")\n        return  {\n            k[0].strip(): \" \".join(k[1].strip().split(\" \")[1:]),\n            k[0].strip() + \"_CODE\": k[1].strip().split(\" \")[0]\n        }\n    except:\n        return {}",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "EXPIRY"
                              }
                         ],
                         "patterns": [],
                         "children": []
                    },
                    {
                         "name": "JENTACULAR14",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "\ndef parse(line):\n    \n    try:\n        line = line.split(\"#\")[1]\n        k = line.split(\":\")\n        return  {\n            k[0].strip(): \" \".join(k[1].strip().split(\" \")[1:]),\n            k[0].strip() + \"_CODE\": k[1].strip().split(\" \")[0]\n        }\n    except:\n        return {}",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "SUBCODE"
                              }
                         ],
                         "patterns": [],
                         "children": []
                    },
                    {
                         "name": "JENTACULAR15",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "\ndef parse(line):\n    \n    try:\n        line = line.split(\"#\")[1]\n        k = line.split(\":\")\n        return  {\n            k[0].strip(): \" \".join(k[1].strip().split(\" \")[1:]),\n            k[0].strip() + \"_CODE\": k[1].strip().split(\" \")[0]\n        }\n    except:\n        return {}",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "AGREEMENT DELIVERY DATE"
                              }
                         ],
                         "patterns": [],
                         "children": []
                    },
                    {
                         "name": "JENTACULAR16",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "\ndef parse(line):\n    \n    try:\n        line = line.split(\"#\")[1]\n        k = line.split(\":\")\n        return  {\n            k[0].strip(): \" \".join(k[1].strip().split(\" \")[1:]),\n            k[0].strip() + \"_CODE\": k[1].strip().split(\" \")[0]\n        }\n    except:\n        return {}",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "AGREEMENT SIGNATURE DATE"
                              }
                         ],
                         "patterns": [],
                         "children": []
                    },
                    {
                         "name": "JENTACULAR17",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "\ndef parse(line):\n    \n    try:\n        line = line.split(\"#\")[1]\n        k = line.split(\":\")\n        return  {\n            k[0].strip(): \" \".join(k[1].strip().split(\" \")[1:]),\n            k[0].strip() + \"_CODE\": k[1].strip().split(\" \")[0]\n        }\n    except:\n        return {}",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "AGREEMENT VERSION NUMBER"
                              }
                         ],
                         "patterns": [],
                         "children": []
                    },
                    {
                         "name": "JENTACULAR18",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "\ndef parse(line):\n    \n    try:\n        line = line.split(\"#\")[1]\n        k = line.split(\":\")\n        return  {\n            k[0].strip(): \" \".join(k[1].strip().split(\" \")[1:]),\n            k[0].strip() + \"_CODE\": k[1].strip().split(\" \")[0]\n        }\n    except:\n        return {}",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "REFINANCEABLE"
                              }
                         ],
                         "patterns": [],
                         "children": []
                    },
                    {
                         "name": "JENTACULAR19",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "\ndef parse(line):\n    \n    try:\n        line = line.split(\"#\")[1]\n        k = line.split(\":\")\n        return  {\n            k[0].strip(): \" \".join(k[1].strip().split(\" \")[1:]),\n            k[0].strip() + \"_CODE\": k[1].strip().split(\" \")[0]\n        }\n    except:\n        return {}",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "ACTG.STRUCTURE CODE"
                              }
                         ],
                         "patterns": [],
                         "children": []
                    },
                    {
                         "name": "JENTACULAR20",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "\ndef parse(input_string):\n    import re\n    try:\n        # Regular expression to match the specific format\n        pattern = (\n            r\"\\s*MAIL CONDITIONS\\s*:\\s*(?P<MAIL_CONDITION>.+)LANGUAGE\\s*.+:\\s*(?P<LANGUAGE>.+)ADDRESS\\s*.+:(?P<ADDRESS>.+)\"\n        )\n\n        # Find the match using the named groups 'key' and 'value'\n        match = re.search(pattern, input_string)\n\n        # Initialize the dictionary to store the results\n        parsed_dict = {}\n\n        if match:\n            # Loop through named groups and add to dictionary\n            for key in match.groupdict():\n                parsed_dict[key] = match.group(key).strip()\n\n        return parsed_dict\n\n    except Exception as e:\n        print(f\"An error occurred: {e}\")\n        return {}",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "MAIL CONDITIONS"
                              },
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "LANGUAGE C"
                              },
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "ADDRESS"
                              }
                         ],
                         "patterns": [],
                         "children": []
                    },
                    {
                         "name": "JENTACULAR21",
                         "min_length": 1,
                         "max_length": 200,
                         "parts_weight": 1.0,
                         "regex_weight": 0.0,
                         "code": "\ndef parse(line):\n    \n    try:\n        line = line.split(\"#\")[1]\n        k = line.split(\":\")\n        return  {\n            k[0].strip(): \" \".join(k[1].strip().split(\" \")[1:]),\n            k[0].strip() + \"_CODE\": k[1].strip().split(\" \")[0]\n        }\n    except:\n        return {}",
                         "parts": [
                              {
                                   "max": 2,
                                   "min": 1,
                                   "name": "SWIFT"
                              }
                         ],
                         "patterns": [],
                         "children": []
                    }
               ]
          }
     ]

# Example usage
processor = ElementProcessor2()
#f = processor.process_elements_with_hierarchy(ss, ls, "JENTACULAR")
f = processor.process_elements(ss, ls)
for t in f:
     print(t)
"""
f = [s for t in f for s in t]

for t in f:
     print(t)
"""
